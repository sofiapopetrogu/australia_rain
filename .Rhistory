}
else {
density_plot <- rain%>% ggplot(aes(x = .data[[col]] , fill = factor(RainTomorrow))) +
geom_density(alpha = 0.5) +
labs(x = col, y = "Density", fill = "RainTomorrow") +
ggtitle(paste("Density Plot of ", col, "by Raintomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10))
plot_list <- append(plot_list, list(density_plot))
}
}
grid.arrange(grobs = plot_list, nrow = 3, ncol = 2)
plot_list <- list()
for (col in column_names) {
if (col == "RainToday") {
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = .data[[col]], fill = col), position = "dodge") +
geom_bar(aes(x = .data[["RainTomorrow"]], fill = "RainTomorrow", position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
plot_list <- append(plot_list, list(bar_plot))
table(rain$RainTomorrow)
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = .data[[col]], fill = col), position = "dodge") +
geom_bar(aes(x = .data[["RainTomorrow"]], fill = "RainTomorrow", position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
print(bar_plot)
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = .data[[col]], fill = col), position = "dodge") +
geom_bar(aes(x = .data[["RainTomorrow"]], fill = "RainTomorrow", position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
bar_plot <- rain%>%ggplot() +
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = .data[[col]], fill = col), position = "dodge") +
geom_bar(aes(x = .data[["RainTomorrow"]], fill = "RainTomorrow", position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10)
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = .data[["RainToday"]], fill = "RainToday"), position = "dodge") +
geom_bar(aes(x = .data[["RainTomorrow"]], fill = "RainTomorrow", position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
print(bar_plot)
print(bar_plot)
bar_plot <- rain %>%
ggplot() +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today"), position = "dodge") +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow"), position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
bar_plot <- rain%>%
ggplot() +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today"), position = "dodge") +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow"), position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today"), position = "dodge") +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow"), position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today"), position = "dodge") +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow"), position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
library(corrplot)
library(ggplot2)
library(caret)
library(magrittr)
library(gridExtra)
file_path <- "/Users/Sofia/Desktop/Rain_Australia/weatherAUS.csv"
rain <- read.csv(file_path)
head(rain)
summary(rain)
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today"), position = "dodge") +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow"), position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
print(bar_plot)
# Find Empty Columns
empty_columns <- which(colSums(is.na(rain)) == nrow(rain))
names_of_empty_col<- names(rain)[empty_columns]
names_of_empty_col
dim(rain)
# Omit rows with NAs. We are left with 56,420 rows and 23 columns
rain <- na.omit(rain)
print(rain)
rain$RainToday <- ifelse(rain$RainToday == "Yes", 1,
ifelse(rain$RainToday == "No", 0, rain$RainToday))
#RainTomorrow is our Target variable
rain$RainTomorrow <- ifelse(rain$RainTomorrow == "Yes", 1,
ifelse(rain$RainTomorrow == "No", 0, rain$RainToday))
#Remove date and location columns and hot encode wind directions
rain <- rain[, !(names(rain) %in% c('Date', 'Location', 'WindGustDir', 'WindDir9am', 'WindDir3pm'))]
# 56,420 Ã— 18
head(rain)
rain <- as.data.frame(lapply(rain, as.numeric))
print(summary(rain))
bar_plot <- rain%>%ggplot() +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today"), position = "dodge") +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow"), position = "dodge") +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
print(bar_plot)
box_plot <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today")) +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot)
head(rain$RainToday)
head(rain$RainTomorrow)
box_plot <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "count")) +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "count")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot)
box_plot <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "identity")) +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot)
box_plot <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "identity")) +
# geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot)
box_plot2 <- ggplot(rain) +
#geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "identity")) +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot2)
table(rain$RainTomorrow)
table(rain$RainToday)
box_plot <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "identity")) +
# geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "RainToday", y = "Count") +
scale_fill_manual(values = "red", labels = c("Rain Today")) +
theme_minimal()
print(box_plot)
box_plot2 <- ggplot(rain) +
#geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "identity")) +
geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "RainTomorrow", y = "Count") +
scale_fill_manual(values = "blue", labels = c("Rain Tomorrow")) +
theme_minimal()
print(box_plot2)
print(box_plot)
print(box_plot2)
table(rain$RainTomorrow)
table(rain$RainToday)
box_plot <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday, levels = c(0,1)), fill = "Rain Today", stat = "identity")) +
# geom_bar(aes(x = factor(RainTomorrow), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "RainToday", y = "Count") +
scale_fill_manual(values = "red", labels = c("Rain Today")) +
theme_minimal()
print(box_plot)
box_plot2 <- ggplot(rain) +
#geom_bar(aes(x = factor(RainToday), fill = "Rain Today", stat = "identity")) +
geom_bar(aes(x = factor(RainTomorrow, levels = c(0,1)), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "RainTomorrow", y = "Count") +
scale_fill_manual(values = "blue", labels = c("Rain Tomorrow")) +
theme_minimal()
print(box_plot)
print(box_plot2)
box_plot3 <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday, levels = c(0,1)), fill = "Rain Today", stat = "identity")) +
geom_bar(aes(x = factor(RainTomorrow, levels = c(0,1)), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = "red", labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot3)
box_plot3 <- ggplot(rain) +
geom_bar(aes(x = factor(RainToday, levels = c(0,1)), fill = "Rain Today", stat = "identity")) +
geom_bar(aes(x = factor(RainTomorrow, levels = c(0,1)), fill = "Rain Tomorrow", stat = "identity")) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("Rain Today", "Rain Tomorrow")) +
theme_minimal()
print(box_plot3)
table(rain$RainTomorrow)
table(rain$RainToday)
barplot(t(rain), beside = TRUE, col = c("red", "blue"), ylim = c(0, 5),
names.arg = c("RainToday", "RainTomorrow"), ylab = "Count")
rain$RainToday <- factor(rain$RainToday, levels = c(0, 1))
rain$RainTomorrow <- factor(rain$RainTomorrow, levels = c(0, 1))
bar_plot <- ggplot(rain) +
geom_bar(aes(x = interaction(RainToday, RainTomorrow), fill = factor(RainToday))) +
labs(x = "Feature", y = "Count", fill = "Rain Today") +
scale_fill_manual(values = c("red", "blue"), labels = c("No", "Yes")) +
theme_minimal()
print(bar_plot)
bar_plot <- ggplot(rain) +
geom_bar(aes(x = interaction(RainToday, RainTomorrow), fill = factor(RainToday))) +
labs(x = "Feature", y = "Count") +
scale_fill_manual(values = c("red", "blue"), labels = c("No", "Yes")) +
theme_minimal()
print(bar_plot)
bar_plot <- ggplot(rain) +
geom_bar(aes(x = interaction(RainToday, RainTomorrow), fill = factor(RainToday))) +
labs(x = "Feature", y = "Count", fill = "Rain Indicator") +
scale_fill_manual(values = c("red", "blue"), labels = c("0", "1")) +
theme_minimal()
print(bar_plot)
rain$Combined <- paste("RainToday", rain$RainToday, "RainTomorrow", rain$RainTomorrow)
bar_plot <- ggplot(rain) +
geom_bar(aes(x = Combined, fill = factor(RainToday)), position = "dodge") +
labs(x = "Feature", y = "Count", fill = "Rain Today") +
scale_fill_manual(values = c("red", "blue"), labels = c("No", "Yes")) +
theme_minimal()
print(bar_plot)
# Calculate the count of each feature
count_rain_today <- sum(rain$RainToday == 1)
count_no_rain_today <- sum(rain$RainToday == 0)
count_rain_tomorrow <- sum(rain$RainTomorrow == 1)
count_no_rain_tomorrow <- sum(rain$RainTomorrow == 0)
# Create a data frame with the counts
count_df <- data.frame(
Feature = c("RainToday", "RainToday", "RainTomorrow", "RainTomorrow"),
Value = c("Yes", "No", "Yes", "No"),
Count = c(count_rain_today, count_no_rain_today, count_rain_tomorrow, count_no_rain_tomorrow)
)
# Plot the barplot
ggplot(count_df, aes(x = Feature, y = Count, fill = Value)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c("blue", "green"), labels = c("Yes", "No")) +
theme_minimal()
# Create a data frame with the counts
count_df <- data.frame(
Feature = c("RainToday", "RainTomorrow", "RainToday","RainTomorrow"),
Value = c("Yes", "Yes", "No", "No"),
Count = c(count_rain_today, count_rain_tomorrow, count_no_rain_today, count_no_rain_tomorrow)
)
# Plot the barplot
ggplot(count_df, aes(x = Feature, y = Count, fill = Value)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c("blue", "green"), labels = c("0", "1")) +
theme_minimal()
count_df <- data.frame(
Feature = c("RainToday", "RainTomorrow", "RainToday","RainTomorrow"),
Value = c("Yes", "Yes", "No", "No"),
Count = c(count_rain_today, count_rain_tomorrow, count_no_rain_today, count_no_rain_tomorrow)
)
# Plot the barplot
ggplot(count_df, aes(x = Feature, y = Count, fill = Value)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Value", y = "Count", fill = "") +
scale_fill_manual(values = c("blue", "green"), labels = c("0", "1")) +
theme_minimal()
# Create a data frame with the counts
count_df <- data.frame(
Feature = c("RainToday", "RainTomorrow", "RainToday","RainTomorrow"),
Value = c("Yes", "Yes", "No", "No"),
Count = c(count_rain_today, count_rain_tomorrow, count_no_rain_today, count_no_rain_tomorrow)
)
# Plot the barplot
ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c("blue", "green"), labels = c("0", "1")) +
theme_minimal()
count_df <- data.frame(
Feature = c("RainToday", "RainTomorrow", "RainToday","RainTomorrow"),
Value = c("1", "1", "0", "0"),
Count = c(count_rain_today, count_rain_tomorrow, count_no_rain_today, count_no_rain_tomorrow)
)
# Plot the barplot
ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c("blue", "green"), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
# Plot the barplot
ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c("red", "blue"), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
for (col in column_names) {
if (col == "RainToday") {
# Plot the barplot
bar_plot <- ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c(pastel_pal()(2)), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
plot_list <- append(plot_list, list(bar_plot))
}
else {
density_plot <- rain%>% ggplot(aes(x = .data[[col]] , fill = factor(RainTomorrow))) +
geom_density(alpha = 0.5) +
labs(x = col, y = "Density", fill = "RainTomorrow") +
ggtitle(paste("Density Plot of ", col, "by Raintomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10))
plot_list <- append(plot_list, list(density_plot))
}
}
install.packages("scales")
install.packages("scales")
library(scales)
plot_list <- list()
for (col in column_names) {
if (col == "RainToday") {
# Plot the barplot
bar_plot <- ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c(pastel_pal()(2)), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
plot_list <- append(plot_list, list(bar_plot))
}
else {
density_plot <- rain%>% ggplot(aes(x = .data[[col]] , fill = factor(RainTomorrow))) +
geom_density(alpha = 0.5) +
labs(x = col, y = "Density", fill = "RainTomorrow") +
ggtitle(paste("Density Plot of ", col, "by Raintomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10))
plot_list <- append(plot_list, list(density_plot))
}
}
library(corrplot)
library(ggplot2)
library(caret)
library(magrittr)
library(gridExtra)
library(scales)
file_path <- "/Users/Sofia/Desktop/Rain_Australia/weatherAUS.csv"
rain <- read.csv(file_path)
head(rain)
summary(rain)
library(corrplot)
library(ggplot2)
library(caret)
library(magrittr)
library(gridExtra)
library(scales)
file_path <- "/Users/Sofia/Desktop/Rain_Australia/weatherAUS.csv"
rain <- read.csv(file_path)
head(rain)
summary(rain)
# Find Empty Columns
empty_columns <- which(colSums(is.na(rain)) == nrow(rain))
names_of_empty_col<- names(rain)[empty_columns]
names_of_empty_col
dim(rain)
# Omit rows with NAs. We are left with 56,420 rows and 23 columns
rain <- na.omit(rain)
print(rain)
rain$RainToday <- ifelse(rain$RainToday == "Yes", 1,
ifelse(rain$RainToday == "No", 0, rain$RainToday))
#RainTomorrow is our Target variable
rain$RainTomorrow <- ifelse(rain$RainTomorrow == "Yes", 1,
ifelse(rain$RainTomorrow == "No", 0, rain$RainToday))
#Remove date and location columns and hot encode wind directions
rain <- rain[, !(names(rain) %in% c('Date', 'Location', 'WindGustDir', 'WindDir9am', 'WindDir3pm'))]
# 56,420 Ã— 18
head(rain)
rain <- as.data.frame(lapply(rain, as.numeric))
print(summary(rain))
plot_list <- list()
for (col in column_names) {
if (col == "RainToday") {
# Plot the barplot
bar_plot <- ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c(pastel_pal()(2)), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
plot_list <- append(plot_list, list(bar_plot))
}
else {
density_plot <- rain%>% ggplot(aes(x = .data[[col]] , fill = factor(RainTomorrow))) +
geom_density(alpha = 0.5) +
labs(x = col, y = "Density", fill = "RainTomorrow") +
ggtitle(paste("Density Plot of ", col, "by Raintomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10))
plot_list <- append(plot_list, list(density_plot))
}
}
install.packages("scales")
library(corrplot)
library(ggplot2)
library(caret)
library(magrittr)
library(gridExtra)
library(scales)
for (col in column_names) {
if (col == "RainToday") {
# Plot the barplot
bar_plot <- ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c(pastel_pal()(2)), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
plot_list <- append(plot_list, list(bar_plot))
}
else {
density_plot <- rain%>% ggplot(aes(x = .data[[col]] , fill = factor(RainTomorrow))) +
geom_density(alpha = 0.5) +
labs(x = col, y = "Density", fill = "RainTomorrow") +
ggtitle(paste("Density Plot of ", col, "by Raintomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10))
plot_list <- append(plot_list, list(density_plot))
}
}
plot_list <- list()
for (col in column_names) {
if (col == "RainToday") {
# Plot the barplot
bar_plot <- ggplot(count_df, aes(x = Value, y = Count, fill = Feature)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Feature", y = "Count", fill = "") +
scale_fill_manual(values = c("red", "blue"), labels = c("RainToday", "RainTomorrow")) +
theme_minimal()
plot_list <- append(plot_list, list(bar_plot))
}
else {
density_plot <- rain%>% ggplot(aes(x = .data[[col]] , fill = factor(RainTomorrow))) +
geom_density(alpha = 0.5) +
labs(x = col, y = "Density", fill = "RainTomorrow") +
ggtitle(paste("Density Plot of ", col, "by Raintomorrow")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size =10))
plot_list <- append(plot_list, list(density_plot))
}
grid.arrange(grobs = plot_list, nrow = 3, ncol = 2)
print(plot_list)
}
grid.arrange(grobs = plot_list, nrow = 3, ncol = 2)
prop.table(table(rain$RainTomorrow))
install.packages("DMwR2")
install.packages("DMwR")
library(DMwR2)
newData <- SMOTE(rain$RainTomorrow ~ ., rain, perc.over = 100,perc.under=300)
library(DMwR2)
newData <- SMOTE(rain$RainTomorrow ~ ., rain, perc.over = 100,perc.under=300)
library(DMwR)
u <- "https://cran.r-project.org/src/contrib/Archive/DMwR/DMwR_0.4.1.tar.gz"
install.packages(u)
library(DMwR)
install.packages("~/Desktop/Rain_Australia/DMwR_0.4.1.tar.gz", repos = NULL, type = "source")
install.packages("abind")
install.packages("ROCR")
u <- "https://cran.r-project.org/src/contrib/Archive/DMwR/DMwR_0.4.1.tar.gz"
install.packages(u)
library(DMwR)
newData <- SMOTE(rain$RainTomorrow ~ ., rain, perc.over = 100,perc.under=300)
newData <- SMOTE(rain$RainTomorrow ~ ., rain, perc.over = 100,perc.under=300)
balancedRAIN <- SmoteClassif(rain$RainTomorrow ~ ., rain[], C.perc = "balance", dist="HEOM")
balancedRAIN <- SMOTEClassif(rain$RainTomorrow ~ ., rain[], C.perc = "balance", dist="HEOM")
install.packages("UBL")
library(UBL)
balancedRAIN <- SmoteClassif(rain$RainTomorrow ~ ., rain[], C.perc = "balance", dist="HEOM")
table(balancedRAIN$RainTomorrow)
table(rain$RainTomorrow)
table(balancedRAIN$RainTomorrow)
newData <- SMOTE(rain$RainTomorrow ~ ., rain, perc.over = 100,perc.under=300)
View(grid_size)
View(balancedRAIN)
newData <- SMOTE(factor(rain$RainTomorrow) ~ ., rain, perc.over = 100,perc.under=300)
newData <- SMOTE(as.factor(rain$RainTomorrow) ~ ., rain, perc.over = 100,perc.under=300)
newData <- SMOTE(as.factor(rain$RainTomorrow) ~ ., rain, perc.over = 100,perc.under=300)
newData <- SMOTE(as.factor(rain$RainTomorrow) ~ ., rain, perc.over = 100,perc.under=300)
install.packages("caret")
library(caret)
under <- downSample(x = rain[, -1], y = rain[, 1])
table(under$RainTomorrow)
head(under)
under <- downSample(x = rain[, -1], y = rain[[RainTomorrow]])
under <- downSample(x = rain[, -1], y = rain[["RainTomorrow"]])
under <- downSample(x = rain[, -1], y = factor(rain[["RainTomorrow"]])
head(under)
under <- downSample(x = rain[, -1], y = factor(rain[["RainTomorrow"]]))
under <- downSample(x = rain[, -1], y = factor(rain[["RainTomorrow"]]))
head(under)
table(under$RainTomorrow)
install.packages("MASS")
library(MASS)
library(MASS)
library(MASS)
